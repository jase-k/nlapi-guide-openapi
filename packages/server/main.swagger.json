{
  "openapi": "3.0.0",
  "info": {
    "title": "NLAPI Guide API",
    "version": "1.0.0",
    "description": "API documentation for NLAPI Guide"
  },
  "servers": [
    {
      "url": "http://localhost:3303"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Family": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-generated ID"
          },
          "name": {
            "type": "string",
            "description": "Family name"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the family was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the family was last updated"
          }
        },
        "example": {
          "id": 1,
          "name": "The Tunes Family",
          "createdAt": "2023-01-01T00:00:00.000Z",
          "updatedAt": "2023-01-01T00:00:00.000Z"
        }
      },
      "UserPublic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-generated ID"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "familyId": {
            "type": "integer",
            "description": "ID of the family the user belongs to"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          }
        }
      },
      "UserPrivate": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Auto-generated ID"
          },
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "familyId": {
            "type": "integer",
            "description": "ID of the family the user belongs to"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the user was last updated"
          }
        },
        "example": {
          "id": 1,
          "name": "Bugs Bunny",
          "email": "bugs.bunny@example.com",
          "familyId": 1,
          "createdAt": "2023-01-01T00:00:00.000Z",
          "updatedAt": "2023-01-01T00:00:00.000Z"
        }
      },
      "UserRegister": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "familyId": {
            "type": "integer",
            "description": "ID of the family the user belongs to"
          }
        },
        "example": {
          "name": "Bugs Bunny",
          "email": "bugs.bunny@example.com",
          "password": "CarrotLover123",
          "familyId": 1
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          }
        },
        "example": {
          "email": "bugs.bunny@example.com",
          "password": "CarrotLover123"
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/families": {
      "get": {
        "summary": "Retrieve a list of families",
        "tags": ["Family"],
        "responses": {
          "200": {
            "description": "A list of families",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Family"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/families/{id}": {
      "get": {
        "summary": "Retrieve a single family by ID",
        "tags": ["Family"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The family ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single family",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Family"
                }
              }
            }
          },
          "404": {
            "description": "Family not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/session/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Session", "no-nlapi"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/session/login": {
      "post": {
        "summary": "Login a user",
        "tags": ["Session", "no-nlapi"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Retrieve a list of users",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "summary": "Fuzzy search users by name and email",
        "tags": ["User"],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The search query"
          },
          {
            "in": "query",
            "name": "searchBy",
            "schema": {
              "type": "string",
              "enum": ["name", "email"]
            },
            "required": false,
            "description": "The field to search by (default is name)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "The maximum number of results to return (default is 3)"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users matching the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPublic"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get own user information",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User profile information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPrivate"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update profile information",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPrivate"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Retrieve a single user by ID",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "no-nlapi",
      "description": "Ignored by the NLAPI"
    },
    {
      "name": "Session",
      "description": "Session management"
    }
  ]
}
